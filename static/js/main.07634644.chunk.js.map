{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","Header","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","index","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07634644.chunk.js","sourcesContent":["function Button({ color, text, onClick }) {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      style={{ backgroundColor: color }}\r\n      className=\"btn\"\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nfunction Header({ onAdd, showAdd }) {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>Task Tracker</h1>\r\n      <Button\r\n        color={showAdd ? \"red\" : \"green\"}\r\n        text={showAdd ? \"Close\" : \"Add\"}\r\n        onClick={onAdd}\r\n      />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { FaTimes } from \"react-icons/fa\";\r\n\r\nfunction Task({ task, onDelete, onToggle }) {\r\n  return (\r\n    <div\r\n      className={`task ${task.reminder ? \"reminder\" : \"\"}`}\r\n      onDoubleClick={() => onToggle(task.id)}\r\n    >\r\n      <h3>\r\n        {task.text}{\" \"}\r\n        <FaTimes\r\n          style={{ color: \"red\", cursor: \"pointer\" }}\r\n          onClick={() => onDelete(task.id)}\r\n        />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n","import Task from \"./Task\";\r\n\r\nfunction Tasks({tasks, onDelete, onToggle}) {\r\n  return (\r\n  <>\r\n  {tasks.map((task, index) => (\r\n        <Task key={index} task={task} onDelete={onDelete} onToggle={onToggle} />\r\n      ))}\r\n  </>\r\n  )\r\n}\r\n\r\nexport default Tasks;\r\n","import { useState } from \"react\";\r\n\r\nfunction AddTask({ onAdd }) {\r\n  const [text, setText] = useState(\"\");\r\n  const [day, setDay] = useState(\"\");\r\n  const [reminder, setReminder] = useState(false);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!text) {\r\n      alert(\"Please add a task\");\r\n      return;\r\n    }\r\n\r\n    onAdd({ text, day, reminder });\r\n\r\n    setText(\"\");\r\n    setDay(\"\");\r\n    setReminder(false);\r\n  };\r\n\r\n  return (\r\n    <form className=\"add-form\" onSubmit={onSubmit}>\r\n      <div className=\"form-control\">\r\n        <label>Task</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add Task\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-control\">\r\n        <label>Day & Time</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add Day & Time\"\r\n          value={day}\r\n          onChange={(e) => setDay(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-control form-control-check\">\r\n        <label>Set Reminder</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={reminder}\r\n          value={reminder}\r\n          onChange={(e) => setReminder(e.currentTarget.checked)}\r\n        />\r\n      </div>\r\n\r\n      <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddTask;\r\n","import { useEffect, useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []);\n\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch(\n      \"hhttps://my-json-server.typicode.com/altamasbari/db.json/tasks\"\n    );\n    const data = await res.json();\n\n    return data;\n  };\n\n  // Fetch Task\n  const fetchTask = async (id) => {\n    const res = await fetch(\n      `hhttps://my-json-server.typicode.com/altamasbari/db.json/tasks/${id}`\n    );\n    const data = await res.json();\n\n    return data;\n  };\n\n  // Add Task\n  const addTask = async (task) => {\n    const res = await fetch(\n      \"hhttps://my-json-server.typicode.com/altamasbari/db.json/tasks\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(task),\n      }\n    );\n\n    const data = await res.json();\n\n    setTasks([...tasks, data]);\n  };\n\n  // Delete Task\n  const deleteTask = async (id) => {\n    await fetch(\n      `hhttps://my-json-server.typicode.com/altamasbari/db.json/tasks/${id}`,\n      {\n        method: \"DELETE\",\n      }\n    );\n\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  // Toggle Reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n\n    const res = await fetch(\n      `hhttps://my-json-server.typicode.com/altamasbari/db.json/tasks/${id}`,\n      {\n        method: \"PUT\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(updTask),\n      }\n    );\n\n    const data = await res.json();\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder } : task\n      )\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <Header\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        \"No Tasks To Show\"\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}